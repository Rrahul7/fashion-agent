generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  profile      Profile?
  reviews      Review[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Profile {
  id                 String            @id @default(cuid())
  userId             String            @unique
  user               User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  skinTone           String?
  build              String?
  faceStructure      String?
  hairType           String?
  height             Float?
  weight             Float?
  otherMeasurements  Json?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  @@map("profiles")
}

model Review {
  id                    String            @id @default(cuid())
  userId                String?           // Optional for guest reviews
  user                  User?             @relation(fields: [userId], references: [id], onDelete: Cascade)
  guestDeviceId         String?           // For guest users (device-based)
  imageUrl              String
  imagePublicId         String?           // Cloudinary public ID for image management
  description           String?
  
  // Outfit Analysis with scores (0-100)
  styleCategory         String?
  styleCategoryScore    Int?
  fit                   String?
  fitScore              Int?
  colorHarmony          String?
  colorHarmonyScore     Int?
  occasionSuitability   String?
  occasionScore         Int?
  
  // Expert-level analysis fields
  proportionBalance     String?
  proportionScore       Int?
  fabricSynergy         String?
  fabricScore           Int?
  stylingSophistication String?
  sophisticationScore   Int?
  
  overallScore          Int?
  highlights            String[]
  improvementSuggestions String[]
  expertInsights        String[]
  technicalFlaws        String[]
  
  // Enhanced feedback storage
  userFeedback          String?           // User's detailed feedback
  feedbackRating        Int?              // 1-5 star rating
  accepted              Boolean?
  
  // Comparison data
  comparedWithIds       String[]
  comparisonInsight     String?
  
  // Guest tracking
  isGuest               Boolean           @default(false)
  createdAt             DateTime          @default(now())

  @@map("reviews")
  @@index([userId, createdAt])
  @@index([guestDeviceId, createdAt])
  @@index([isGuest, createdAt])
}

// Track guest devices and their usage limits (much more secure than sessions)
model GuestDevice {
  id                    String            @id @default(cuid())
  deviceId              String            @unique    // Secure device identifier
  deviceFingerprint     String            // Device characteristics hash
  reviewCount           Int               @default(0)
  
  // Device metadata for security and analytics
  platform              String?           // iOS/Android
  deviceName            String?           // User-set device name
  appVersion            String?           // App version
  osVersion             String?           // OS version
  
  // Network and security tracking
  ipAddress             String?           // Current IP
  ipAddresses           String[]          // Historical IPs for pattern detection
  userAgent             String?           // User agent string
  
  // Security flags
  isBlocked             Boolean           @default(false)
  riskScore             Int               @default(0)    // 0-100 risk assessment
  inconsistencyCount    Int               @default(0)    // Track device spoofing attempts
  
  // Usage tracking
  lastUsedAt            DateTime          @default(now())
  firstSeenAt           DateTime          @default(now())
  totalRequests         Int               @default(0)
  
  // Abuse detection
  rapidRequestCount     Int               @default(0)    // Requests in last minute
  dailyRequestCount     Int               @default(0)    // Requests today
  lastDailyReset        DateTime          @default(now())
  
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt

  @@map("guest_devices")
  @@index([deviceId])
  @@index([deviceFingerprint])
  @@index([createdAt])
  @@index([lastUsedAt])
  @@index([isBlocked])
  @@index([riskScore])
  @@index([ipAddress, createdAt])
}
